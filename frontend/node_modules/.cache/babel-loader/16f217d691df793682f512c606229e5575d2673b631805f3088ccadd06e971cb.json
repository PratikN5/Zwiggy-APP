{"ast":null,"code":"var _jsxFileName = \"D:\\\\Zwiggy-APP\\\\frontend\\\\src\\\\components\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = ({\n  restaurantId,\n  onReviewAdded\n}) => {\n  _s();\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      // You may need to add auth headers here\n      await axios.post(`/api/reviews/${restaurantId}`, {\n        rating,\n        comment\n      });\n      setComment('');\n      setRating(5);\n      if (onReviewAdded) onReviewAdded();\n    } catch (err) {\n      setError('Failed to submit review.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rating,\n        onChange: e => setRating(Number(e.target.value)),\n        children: [1, 2, 3, 4, 5].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: n,\n          children: n\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Submitting...' : 'Submit Review'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"d8BmM0pPvfYjL31gruOk8ADxzts=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ReviewForm","restaurantId","onReviewAdded","_s","rating","setRating","comment","setComment","loading","setLoading","error","setError","handleSubmit","e","preventDefault","post","err","onSubmit","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","Number","target","map","n","required","type","disabled","color","_c","$RefreshReg$"],"sources":["D:/Zwiggy-APP/frontend/src/components/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ReviewForm = ({ restaurantId, onReviewAdded }) => {\r\n  const [rating, setRating] = useState(5);\r\n  const [comment, setComment] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      // You may need to add auth headers here\r\n      await axios.post(`/api/reviews/${restaurantId}`, { rating, comment });\r\n      setComment('');\r\n      setRating(5);\r\n      if (onReviewAdded) onReviewAdded();\r\n    } catch (err) {\r\n      setError('Failed to submit review.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{marginBottom: 16}}>\r\n      <h4>Leave a Review</h4>\r\n      <label>\r\n        Rating:\r\n        <select value={rating} onChange={e => setRating(Number(e.target.value))}>\r\n          {[1,2,3,4,5].map(n => <option key={n} value={n}>{n}</option>)}\r\n        </select>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Comment:\r\n        <textarea value={comment} onChange={e => setComment(e.target.value)} required />\r\n      </label>\r\n      <br />\r\n      <button type=\"submit\" disabled={loading}>{loading ? 'Submitting...' : 'Submit Review'}</button>\r\n      {error && <div style={{color:'red'}}>{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}